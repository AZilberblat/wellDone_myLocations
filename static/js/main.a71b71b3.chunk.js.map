{"version":3,"sources":["redux/constants/categoryConstant.js","redux/constants/pageConstants.js","redux/actions/categoryActions.js","redux/actions/modelActions.js","components/AddModal.jsx","components/DeleteModal.jsx","components/EditModal.jsx","components/Header.jsx","components/ListData.jsx","redux/actions/pageActions.js","components/ViewModal.jsx","App.js","redux/reducers/categoryReducer.js","redux/reducers/currentPage.js","redux/reducers/selectedCategory.js","redux/reducers/modal.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["INSERT_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","SELECT_CATEGORY","UNSELECT_CATEGORY","CHANGE_PAGE","OPEN_MODEL","unselectCategory","type","openModel","payload","AddModal","modal","useSelector","state","dispatch","useDispatch","useState","name","setName","handleClose","Dialog","open","onClose","aria-labelledby","fullWidth","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","value","onChange","e","target","DialogActions","Button","onClick","color","DeleteModal","selectedCategory","category","index","EditModal","useEffect","new","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","Typography","style","cursor","variant","SelectedListItem","allcategories","React","selectedIndex","setSelectedIndex","handleListItemClick","event","changePage","Divider","List","component","aria-label","map","each","ListItem","button","selected","ListItemText","primary","ViewModal","App","data","localStorage","getItem","initialState","JSON","parse","action","setItem","stringify","temp","del","splice","currentPage","model","appReducer","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71b71b3.chunk.js","sourcesContent":["export const INSERT_CATEGORY = 'INSERT_CATEGORY';\r\nexport const UPDATE_CATEGORY = 'UPDATE_CATEGORY';\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY';\r\n\r\nexport const SELECT_CATEGORY = 'SELECT_CATEGORY';\r\nexport const UNSELECT_CATEGORY = 'UNSELECT_CATEGORY';\r\n","export const CHANGE_PAGE = 'CHANGE_PAGE';\r\nexport const OPEN_MODEL = 'OPEN_MODEL';\r\n","import {\r\n  INSERT_CATEGORY,\r\n  UPDATE_CATEGORY,\r\n  DELETE_CATEGORY,\r\n  SELECT_CATEGORY,\r\n  UNSELECT_CATEGORY,\r\n} from '../constants';\r\n\r\nexport const addNewCategory = (payload) => ({\r\n  type: INSERT_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const editCategory = (payload) => ({\r\n  type: UPDATE_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const deleteCategory = (payload) => ({\r\n  type: DELETE_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const selectCategory = (payload) => ({\r\n  type: SELECT_CATEGORY,\r\n  payload,\r\n});\r\n\r\nexport const unselectCategory = () => ({\r\n  type: UNSELECT_CATEGORY,\r\n});\r\n","import { OPEN_MODEL } from '../constants';\r\n\r\nexport const openModel = (payload) => ({\r\n  type: OPEN_MODEL,\r\n  payload,\r\n});\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModel, addNewCategory } from '../redux/actions';\r\n\r\nexport default function AddModal() {\r\n  const modal = useSelector((state) => state.modal);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const handleClose = () => {\r\n    dispatch(openModel(''));\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    dispatch(addNewCategory(name));\r\n    dispatch(openModel(''));\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={modal === 'ADD'}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">ADD</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Enter Category Name</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Category Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAdd} color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModel, deleteCategory, unselectCategory } from '../redux/actions';\r\n\r\nexport default function DeleteModal() {\r\n  const modal = useSelector((state) => state.modal);\r\n  const selectedCategory = useSelector((state) => state.selectedCategory);\r\n  const category = useSelector((state) => state.category);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(openModel(''));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    dispatch(\r\n      deleteCategory({\r\n        index: selectedCategory,\r\n      }),\r\n    );\r\n    dispatch(openModel(''));\r\n    dispatch(unselectCategory());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={modal === 'DELETE'}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">DELETE</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Category Name</DialogContentText>\r\n          <p>{category[selectedCategory]}</p>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleDelete} color=\"primary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModel, editCategory, unselectCategory } from '../redux/actions';\r\n\r\nexport default function EditModal() {\r\n  const modal = useSelector((state) => state.modal);\r\n  const selectedCategory = useSelector((state) => state.selectedCategory);\r\n  const category = useSelector((state) => state.category);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  useEffect(() => {\r\n    setName(category[selectedCategory]);\r\n  }, [selectedCategory, category]);\r\n\r\n  const handleClose = () => {\r\n    dispatch(openModel(''));\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    dispatch(\r\n      editCategory({\r\n        index: selectedCategory,\r\n        new: name,\r\n      }),\r\n    );\r\n    dispatch(openModel(''));\r\n    dispatch(unselectCategory());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={modal === 'EDIT'}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">EDIT</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Enter Category Name</DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Category Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleUpdate} color=\"primary\">\r\n            Update\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModel, unselectCategory } from '../redux/actions';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const selectedCategory = useSelector((state) => state.selectedCategory);\r\n  const dispatch = useDispatch();\r\n  let title = '';\r\n  if (selectedCategory === -1) title = 'Categories';\r\n  if (selectedCategory !== -1) title = 'Category';\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography\r\n            style={{ cursor: 'pointer' }}\r\n            variant=\"h6\"\r\n            className={classes.title}\r\n            onClick={() => {\r\n              dispatch(unselectCategory());\r\n            }}\r\n          >\r\n            {title}\r\n          </Typography>\r\n          {selectedCategory === -1 && (\r\n            <Button color=\"inherit\" onClick={() => dispatch(openModel('ADD'))}>\r\n              Add\r\n            </Button>\r\n          )}\r\n          {selectedCategory !== -1 && (\r\n            <>\r\n              <Button color=\"inherit\" onClick={() => dispatch(openModel('EDIT'))}>\r\n                Edit\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => dispatch(openModel('VIEW'))}>\r\n                View\r\n              </Button>\r\n              <Button color=\"inherit\" onClick={() => dispatch(openModel('DELETE'))}>\r\n                Delete\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectCategory, changePage } from '../redux/actions';\r\n\r\nexport default function SelectedListItem() {\r\n  const allcategories = useSelector((state) => state.category);\r\n  const selectedCategory = useSelector((state) => state.selectedCategory);\r\n\r\n  const dispatch = useDispatch();\r\n  const [selectedIndex, setSelectedIndex] = React.useState(-1);\r\n\r\n  useEffect(() => {\r\n    setSelectedIndex(selectedCategory);\r\n  }, [selectedCategory]);\r\n\r\n  const handleListItemClick = (event, index) => {\r\n    setSelectedIndex(index);\r\n    dispatch(selectCategory(index));\r\n    dispatch(changePage('SELECTED'));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"secondary mailbox folder\">\r\n        {allcategories.map((each, index) => (\r\n          <div key={index}>\r\n            <ListItem\r\n              button\r\n              selected={selectedIndex === index}\r\n              onClick={(event) => handleListItemClick(event, index)}\r\n            >\r\n              <ListItemText primary={each} />\r\n            </ListItem>\r\n            <Divider />\r\n          </div>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import { CHANGE_PAGE } from '../constants';\r\n\r\nexport const changePage = (payload) => ({\r\n  type: CHANGE_PAGE,\r\n  payload,\r\n});\r\n","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModel } from '../redux/actions';\r\n\r\nexport default function ViewModal() {\r\n  const modal = useSelector((state) => state.modal);\r\n  const selectedCategory = useSelector((state) => state.selectedCategory);\r\n  const category = useSelector((state) => state.category);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(openModel(''));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={modal === 'VIEW'}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">VIEW</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Category Name</DialogContentText>\r\n          <p>{category[selectedCategory]}</p>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import AddModal from './components/AddModal';\nimport DeleteModal from './components/DeleteModal';\nimport EditModal from './components/EditModal';\nimport Header from './components/Header';\nimport ListData from './components/ListData';\nimport ViewModal from './components/ViewModal';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ListData />\n      <AddModal />\n      <ViewModal />\n      <EditModal />\n      <DeleteModal />\n    </div>\n  );\n}\n\nexport default App;\n","import { INSERT_CATEGORY, UPDATE_CATEGORY, DELETE_CATEGORY } from '../constants';\r\n\r\nconst data = localStorage.getItem('categoriesData');\r\nconst initialState = data === null ? [] : JSON.parse(data);\r\n\r\nconst category = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INSERT_CATEGORY:\r\n      localStorage.setItem('categoriesData', JSON.stringify([action.payload, ...state]));\r\n      return [action.payload, ...state];\r\n    case UPDATE_CATEGORY:\r\n      let temp = [...state];\r\n      temp[action.payload.index] = action.payload.new;\r\n      localStorage.setItem('categoriesData', JSON.stringify(temp));\r\n      return temp;\r\n    case DELETE_CATEGORY:\r\n      let del = [...state];\r\n      del.splice(action.payload.index, 1);\r\n      localStorage.setItem('categoriesData', JSON.stringify(del));\r\n      return del;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default category;\r\n","import { CHANGE_PAGE } from '../constants';\r\n\r\nconst currentPage = (state = 'LIST', action) => {\r\n  switch (action.type) {\r\n    case CHANGE_PAGE:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentPage;\r\n","import { SELECT_CATEGORY, UNSELECT_CATEGORY } from '../constants';\r\n\r\nconst selectedCategory = (state = -1, action) => {\r\n  switch (action.type) {\r\n    case SELECT_CATEGORY:\r\n      return action.payload;\r\n    case UNSELECT_CATEGORY:\r\n      return -1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default selectedCategory;\r\n","import { OPEN_MODEL } from '../constants';\r\n\r\nconst model = (state = '', action) => {\r\n  switch (action.type) {\r\n    case OPEN_MODEL:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default model;\r\n","import { combineReducers } from 'redux';\r\nimport category from './categoryReducer';\r\nimport currentPage from './currentPage';\r\nimport selectedCategory from './selectedCategory';\r\nimport modal from './modal';\r\n\r\nconst appReducer = combineReducers({\r\n  category,\r\n  currentPage,\r\n  selectedCategory,\r\n  modal,\r\n});\r\n\r\nexport default appReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './reducers';\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}